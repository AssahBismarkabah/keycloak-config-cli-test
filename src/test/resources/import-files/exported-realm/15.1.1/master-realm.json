{
  "id": "master",
  "realm": "master",
  "displayName": "Keycloak",
  "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 60,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 600,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "c65ef18a-a2a7-446b-bf05-996f571cf9cc",
        "name": "create-realm",
        "description": "${role_create-realm}",
        "composite": false,
        "clientRole": false,
        "containerId": "master",
        "attributes": {}
      },
      {
        "id": "96c48de9-e7ae-4b1e-9a4b-380058f93a72",
        "name": "default-roles-master",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "master",
        "attributes": {}
      },
      {
        "id": "c6f8227e-dea2-4fd1-bcd3-7221c00cca66",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "master",
        "attributes": {}
      },
      {
        "id": "35555477-7f27-4683-921b-a17a1b66125e",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "master",
        "attributes": {}
      },
      {
        "id": "77708058-00fc-4f86-9274-748e6900667c",
        "name": "admin",
        "description": "${role_admin}",
        "composite": true,
        "composites": {
          "realm": [
            "create-realm"
          ],
          "client": {
            "master-realm": [
              "view-clients",
              "view-identity-providers",
              "manage-identity-providers",
              "manage-users",
              "view-users",
              "manage-clients",
              "view-realm",
              "query-realms",
              "create-client",
              "impersonation",
              "manage-events",
              "view-authorization",
              "view-events",
              "manage-authorization",
              "query-users",
              "query-groups",
              "query-clients",
              "manage-realm"
            ]
          }
        },
        "clientRole": false,
        "containerId": "master",
        "attributes": {}
      }
    ],
    "client": {
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "f7168730-190d-4847-adb1-4188a7229ef1",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "2682bdc4-e9b8-4ebb-ac28-a82ccf9deef9",
          "attributes": {}
        }
      ],
      "master-realm": [
        {
          "id": "83d26769-51d8-4fc4-8433-742b0ce71e36",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "master-realm": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "d709f265-afa5-4a9b-9808-c7af0f9c350f",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "dcbd3bf0-029f-4205-b039-438302e9f1da",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "77b4901d-1bee-41c8-b79d-d56ddd1fe131",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "af69c953-b038-44b2-9c7a-42a267763083",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "master-realm": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "17d3ea7c-11c7-46e1-9a8a-c45b3dc9981f",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "73634074-c04f-4e0f-a809-0999d0f0bb00",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "e425bef4-b629-4d88-9880-2aa17486e256",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "2fbd70db-e127-4877-8b3a-88dfb054fe01",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "a4553436-a96f-4c08-b4ed-aff1d2a6e8c9",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "50db57c1-79e3-4007-bdd1-336ad9abe5b5",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "223579ef-85ba-4279-9b37-44a63150eac7",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "0a0d6b0f-e8a3-4cb4-8077-b409a76bdaa0",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "dee7c416-bbfc-457c-acbe-a067833eb7a4",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "51459591-347b-4470-8ca7-f64a07f5a92f",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "399d068b-bbac-428c-86bf-5df12f9166fe",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "97c003ad-e3b0-4547-8ae4-3605687f84f1",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        },
        {
          "id": "f9b75fc8-f458-4de5-b5b0-d46f93754471",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "ea8e41c1-941e-4145-b428-6f39781258d5",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "e16b8f2b-f584-4dea-ac2f-4eee7c48668d",
          "attributes": {}
        },
        {
          "id": "8692e7ba-9bab-4f7e-8bbb-da2fc4221f4e",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e16b8f2b-f584-4dea-ac2f-4eee7c48668d",
          "attributes": {}
        },
        {
          "id": "d405e20a-0638-4acc-801b-b0207d22064d",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "e16b8f2b-f584-4dea-ac2f-4eee7c48668d",
          "attributes": {}
        },
        {
          "id": "6856877c-f3ed-4373-bbb3-acf5e3c677ff",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "e16b8f2b-f584-4dea-ac2f-4eee7c48668d",
          "attributes": {}
        },
        {
          "id": "c7360e6e-2040-430c-af72-cb0cfd82f76e",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "e16b8f2b-f584-4dea-ac2f-4eee7c48668d",
          "attributes": {}
        },
        {
          "id": "bb7a911e-787f-470f-a7a6-48b16c3f7ae2",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "e16b8f2b-f584-4dea-ac2f-4eee7c48668d",
          "attributes": {}
        },
        {
          "id": "80536640-3399-4eff-9117-14bafb61adec",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e16b8f2b-f584-4dea-ac2f-4eee7c48668d",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "96c48de9-e7ae-4b1e-9a4b-380058f93a72",
    "name": "default-roles-master",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "master"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "b97fc5cf-640d-44e3-852f-31e774609644",
      "createdTimestamp": 1639786749376,
      "username": "admin",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "credentials": [
        {
          "id": "98ed99d0-bb26-4b3e-872e-6f36bf077916",
          "type": "password",
          "createdDate": 1639786749421,
          "secretData": "{\"value\":\"HnKBtgG+WBinskZ1Ux2/VnXNDbve9q3qrj3XpU0sF5eD3EYOq0JlGuvpwfuABPQ8hnna1tfAeCZWf11WarpQcQ==\",\"salt\":\"IPs1nstlUxhof6XJb23Jsg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-master",
        "admin"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "e16b8f2b-f584-4dea-ac2f-4eee7c48668d",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/master/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/master/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2500439d-1f41-4a71-a3fb-7f95f47c36ee",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/master/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/master/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "a21a8cca-5ea9-449b-9a94-94967491a3e4",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "804c1599-9a0b-49ca-abc7-ed61ca5b1bd0",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2682bdc4-e9b8-4ebb-ac28-a82ccf9deef9",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fd147048-8ae6-41c7-b0d8-ba36daca7dea",
      "clientId": "master-realm",
      "name": "master Realm",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2ce0807d-d8dc-45f0-8d75-e487502f147d",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/master/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/master/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "77f06875-0422-4bc2-b946-a6df9b9dbb97",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "b9aa77b1-d9ab-4083-9f95-c601edee7b41",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "2aa15df8-23ff-4034-b9de-ee2c31c05892",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "d5da5bf4-1780-4478-a5a2-2841eccd8ed5",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "c66c419b-a45b-4c3b-bca4-87bb5eca95f2",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2a53c17b-10c0-48ed-9410-53ab2b36e6c1",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "98f86aa9-f455-48c1-8f38-43fad1c0558f",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "180d91d1-7f2a-4c53-be9a-2d74c8cf502c",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "b22550f4-4c35-47b5-8073-68fc674735ca",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "0aa42b6e-f379-424d-be37-7ab19ec23daf",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c0191d56-a18b-444d-a129-e09defd2c865",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "4aab5f36-acbe-479b-b771-dadc7dcf785e",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "f2932fd2-01d1-4a1a-8870-b629ddb0c2c6",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "319d4067-9f12-49d3-8c41-30f22923d42f",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "8ef83397-84d8-4ced-8ed0-e8969bf5273f",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "9695a2fd-ca9f-42b4-8203-0543cb508346",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3841a693-68a6-44ef-ad58-367ad1416673",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6725d081-b0aa-43db-8382-467d389a215b",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1008f79e-11b0-466a-9771-f7531ac71c42",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "094eb7bb-05eb-4f8b-84d6-ad53795d0de5",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3c135e0f-7c60-497d-9b05-920bb6b19913",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9b361a05-cbae-4963-8796-a8b4237dd39a",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "939f79c7-f00e-482d-9bc6-590dc00244be",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a9e3bba7-d141-430b-a434-83847cc78844",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4676f814-c190-4df1-bd5e-29303e37a7c8",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "73472beb-c4a0-43f7-a4d7-7c1b106873da",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "670e806b-d199-458b-b8cd-351605b00d5a",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5d169968-8534-45c6-9066-b27c81dc67a1",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "65688bbf-69cd-4093-bbd5-08dae97e1706",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "4e4dbe51-9733-4b78-bd31-d62c62930139",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "30c7fbc4-86b7-4d6a-9612-85296034d5e4",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "91a92b81-215f-4c0a-834d-2a0ddb90d88c",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "28db5da0-08af-444e-b0d0-8f953eb46818",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "40b804e0-8543-4373-8d82-7564f876efe2",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "c4a248fa-4cc4-43b0-9763-3a563bddff9d",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "633f6043-9bf1-4de9-845b-d794ee3d9dbb",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "xXSSProtection": "1; mode=block",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "c6109875-55fe-4bfc-8248-64b57e3074cf",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "8414f127-b7da-49a2-910d-934459dcec4a",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "5e78c536-448f-4ccb-af77-fd2b53a4c015",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "25e3a6de-fc82-4aa2-b5e5-1637753800ba",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "bbebec66-1985-4842-a316-c72df7be9c9a",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "7044d26e-efbe-4d8e-8d2f-0cf8829a2375",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "4023aa33-bbfb-47a9-ab63-a201e3b8a79e",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "1f954b90-5d92-4093-aca7-a8c377dc304d",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "17e8510e-1c86-4144-9c51-795783d4e822",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAiPO0GV4tXN6vkZg3AByokmdUUYpdYeXaCcy49ri4y1KwjiWhyRCKkY4lQn9qqZVgvRdhEOTML1nh5P6+QX8Ge+wqc7eGF2wIWxQrPdQyIhuK+LEQLnLQwW/BjDihz46TyiJvabarPEIFf9avSp0UkWIjqCxURucBGW7TmHRMmYtfvx55NO27wr+B7crMHO0sOuGC1YIwLJB0Zzi/4rdQRHzDQfoBBtgDeG1A6FV4Sjfc1ThexZHDIqUzEC04yQq0oDxS8H1UGHiaY05Dr73HDiITxYIqeiwXvMq9/nEqZKw21DlB8g1A7F3ynVShSEZ2iQlYAvdBUqlaLiw8EeVhWQIDAQABAoIBABKG9Zxg8z4XGiVWNEqdleiIdg257DwsPj0JJxSplMZc32m7iZGL3VMnqb6/QgzDGp06JnWEnmLhg//YvqBZsOTe5DdXYpqUkOTRa7AnnsiidUCDo67E9ZzVo5d2qd1Mao3z7qKchbnXLKtIvdoYOgoY/r3nkVcuNSXdql57jUlQL3rPIucW6HmMzvvbktEoBmlUmDL7nVNScBu5YgybsRgnf+9VYbzF1v24omQW8y4rBNSKT9LsHsXkAdeaJWbMPHCJypPTJ68up497PwFH0SDRsBBy8527qRnALIfSB/427Nv23duUAWBzsJOjBjvKReRKHlp6Fh0N18yYyfKUTukCgYEA7eU21T70ZyGC1wT5x+nR0INoOpCHfxw2vBZNBwDDKD2VWsvDh9GJ+D509msTaa9NxnqWtULHoe80cDRDXEEYQpsliPzWFAvaS8jQZ/CPJAhlAQad1toybKscowZ/0jzHVMTqV97egoNkDA6GLKqWCVDbjgQ+L691Q4Ls60VqRlcCgYEAk1/dMj9DNClt2qX8MWVS7MzPza5gQ0GsuKhsvUWT5dn1UqqcT660cGozbCLI692qiPCv+Ssg705FZkyU4lYe0YONUJM4gJpEI87J5j3qtmhZi/TMw2gYbJoafdWfsW2gxC2TlSvnKmMOFTz88m1H9+pkHKyIqI9IC4K/nhWy588CgYEAx8Ul6Kj3H+uaLen1vxTwpkLTMerQfcM5i3TGtkzDlXUxiI934QPq8lWwboW4RZV6oGOtTwWHEssGo/qfXkcjkjsqqAB53VeetukpaT8vVLjf6J6fyR5uHacLYzM//1IeqWa6y5NSExM23pELx1Jwr94AoR+bAPw8Yrb9MQyXk/0CgYEAgpgxsGQlDmUkBtyNxcvvFw5Lmw1KGm9pOl1ttq+gZs+lODMdvvKmzPMfTFTqzTCp/R2kIt4YGle24fc8+/Cq8KhtophDOpr5hO2rNk9p3WhM6dvtU7+73QkWLqoOEDGAhDeLD2ZPO915TlK0J7O1UbiwLESr+Qq3IhQj71d1KTsCgYBNtIPnn5rqW/GgNbkuv7btxW0zfbbD7s8w+i6/HPb038aQPCSzjrjD2pwBLfkrG0IjxDB5kl31l5cXIUP2IY/SvnsM7aNjzARWRiFga+QzZQi0ikIpAIyTwJFso4kwfUxpbEx6gdEt4gzG/6GP/apFOd03Twl4SzQAuU+ahnkS6Q=="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICmzCCAYMCBgF9yugbvTANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjExMjE4MDAxNzI4WhcNMzExMjE4MDAxOTA4WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCI87QZXi1c3q+RmDcAHKiSZ1RRil1h5doJzLj2uLjLUrCOJaHJEIqRjiVCf2qplWC9F2EQ5MwvWeHk/r5BfwZ77Cpzt4YXbAhbFCs91DIiG4r4sRAuctDBb8GMOKHPjpPKIm9ptqs8QgV/1q9KnRSRYiOoLFRG5wEZbtOYdEyZi1+/Hnk07bvCv4Htyswc7Sw64YLVgjAskHRnOL/it1BEfMNB+gEG2AN4bUDoVXhKN9zVOF7FkcMipTMQLTjJCrSgPFLwfVQYeJpjTkOvvccOIhPFgip6LBe8yr3+cSpkrDbUOUHyDUDsXfKdVKFIRnaJCVgC90FSqVouLDwR5WFZAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGzNEzwrYpyWF9G/2b9Z8c9n6YrtlAcvGJZs2//u5Xpiy/ZeyH8zdhimvoN5MFyffgd3HWZJ+QLOlHNJ5R6yLAeg0okUrlYycZKHdT5Dw+45E3M1cubnX47x3N0t9EIHQdVawfNB8YujudJowak1AOT75HS9NIeO0v4sL/YptDbf1T42Ga64B/RZEleEAvMfHKTs3/GLtisxYA7bosCQDmaq2sPQhTFZtilqBOi5bfdk46VHc3G9C0hsoCepiquhRwY/wMX7/VLxteXM2xDQssX3Io/IJv9VMG7q/E3Z30UCzwK66sW6fk8of12bAqUy09jnCl1Ec+tW9I3/Jvlcrcw="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "5c009e46-2e7f-47be-ba2a-a7bb77ab2a4e",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "bb490c70-10d9-46c7-bfa5-d84eca70663f"
          ],
          "secret": [
            "J13xVH7gIL_TkvCJkd8uXooerN7ewtteWbRbMR1iz3v6fns0r6KiskY-AuGGb4sFkPvyoDupC23RXxkCcwpBgg"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "8dacd950-3170-4622-a5a0-71d0450fc06b",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAvY1Z8ZIBz9NeiLUtfxy6ppHDAJjL+LahK/u7xXZyaAtllUaAf/gq+KYVYzpwHkauKOC/gh48EJ8tKLGL5+Nflyn1KinBF7v9X+6A8pQFHRtD8oUPhg4ecem4mdLeak4+EPgOFeWtOni5vzshYufxTZN0Aa0I8vJvGs7SK064n6l1WNkTwLr82bQ0JNGUHZLsBtJ0f7PeClGPyMMAa64pBrUKBziC/dKlfxXAoAjZZ9I4DF52EtbwnP4jp/FgveFHUfNX7gzsmcam/f/hHcFYHc6ZDccI1NC2sKaqcp+bwJgB+ethfWw9B1GHquNTIh1OJSvoQT/Aidkb8+wr3ftBMQIDAQABAoIBAQC2tj3wwVDFx3TkSeAlGshAL1jMhnx2rXQGNYz19gqph/LPRTowIEMrkswi7f2M8YyHEr0G66XyT7zz8NBvIZjO2T7c+YqLGkZN5lSdf1i+ib2hU+l2yr1GCIhMnhqOVgU1ziWlrdKg/iXt002HTRQoNu4nf2eU52N5b8reu+7y1nj7sI+u+u09RDtMkgCZlk6knZi5W4ZtUS36bGYBDBEW5DbnjKpS94HGf++0ztpJlpnHtNdc7Buydl0lrbQwv93PeaaCwa2Rn7ymAlj7oArqDQHy+LpsVQs+v7f776DXDq2iHm17ZGxy6w3NP6krPFO28jVMv6+py9uBDe0aZYTRAoGBAN2CmnZTp/xLSnhM0syKpbYs4n8I7s/TEB4QkpWPGLWkVLJvP0iGsqLlzlT1jFTDlbx7g+//QyzZXKwhAUuamhiGDZc7UpmJHPx+hTfEQi0uaxHIiluWuWlDFNXrHR4f0d/luEiJ43E+4qRzdgao5wizyLRWxd4/nYP3IXHfFI1DAoGBANsQ5rp5ycxYEnVYLSac9wAF8hv7gpSTIkaab0bnFEydaCXhITXMZZyVODke/c964bX57jjpPVT+J9jVdlsz0/QrKgUeIfOsez+WfBu3o3u/jeJmy+ZtFcvyFpfG17ff9hxvSB+CRPWCaMHjW4HCYGeRO1eU3l3FAdEnylx23/Z7AoGAMPYrWjhHi1bBETI57gg/dLMbJWU+FCXdDCgxnmlQ1uWJ6x735/oOBj+xicn0yM+qi0zp7uSHXqR0/X8WIDX+Famb22+7ZECQbacxnw/8aKw38mhXXMNGHGQ9eMNNXlk+NLU8NJx175Qs2JjE39f5qUzD8kiz19pL4N2BQQBENK0CgYBfWTrj3VB9NbRLCOcWEGndw7i+fzk1y9i2XE+kz71hH34ORq/6x41OmxBOpHOalASb/T233aUJUlorobWTOrq9YvA2LAhhFCjM44X/Vm281gI+kbmcAMzk6Oj2hOCtsrhfZfxBYqT7KxjHk1rn3p+xVGA83ZnvvGjvDV+h4UfX8wKBgBG+uj+gyxgbuhZPX2jjxLUpGVlQC/hVytIF2cLNAaIsviKPcMqGUAmNmnOmsUNqFlQ6T+QgEHRCngj9DPl4i+ciWqq2VcPn3ahZJnuLoceeytQGuh9c2TUsZHn67KMk0/p7Jec+8mUC0x4YE30BzyLroiIUiv18sdN2b1MMwok1"
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICmzCCAYMCBgF9yugcRTANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjExMjE4MDAxNzI4WhcNMzExMjE4MDAxOTA4WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9jVnxkgHP016ItS1/HLqmkcMAmMv4tqEr+7vFdnJoC2WVRoB/+Cr4phVjOnAeRq4o4L+CHjwQny0osYvn41+XKfUqKcEXu/1f7oDylAUdG0PyhQ+GDh5x6biZ0t5qTj4Q+A4V5a06eLm/OyFi5/FNk3QBrQjy8m8aztIrTrifqXVY2RPAuvzZtDQk0ZQdkuwG0nR/s94KUY/IwwBrrikGtQoHOIL90qV/FcCgCNln0jgMXnYS1vCc/iOn8WC94UdR81fuDOyZxqb9/+EdwVgdzpkNxwjU0Lawpqpyn5vAmAH562F9bD0HUYeq41MiHU4lK+hBP8CJ2Rvz7Cvd+0ExAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAI7hnY1t0tZ/C41pKerAKn+6nDx889JwYeCPKuTxuV5RvSifk9bT0XDkE2ZPnljCcDKgtHQYBUKpc7J5l23qBQGXXN7Okm6Hg/CuU8lYaY4q4Urv9/LNWrSzdKuUt2EEveGPq4RE+YDp7AXKy9qzjWRH74h8zRmODNdSDcgyGB97b2cnBXVR10xbxtsLXs0odnypG0N1rS82wxc/62UwiXHeCZbGGMOYaWz17C85GKGfcR5SgF1tb7ecYaNLSsEXXnbeka0JvXQVAp7XRozJr85R3PV2Zaoh4NrorgdkmZ7GNeQDWqzDn0u+Int08+YPzwO0cXaGzPPCf2A20+skNhg="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "8ba09894-1959-4c63-9e0f-aa8af3b1ac1f",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "4222d071-fe42-45b7-a05f-62188ce45e29"
          ],
          "secret": [
            "d6yC6ENh4HiTD4kRgoBCig"
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "daf74f49-30f7-46ea-a583-81be816171c9",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "79c07582-fb3c-48eb-a09b-3628dedb0dd2",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "8f19e0e2-fb45-4d9e-a00c-ffd8339cd4de",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "19f39828-bdab-4966-bef7-b418a21be729",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "5aff02ba-714d-4b6b-9a57-3b0025e60337",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "42fe30f0-172e-4273-8a04-a85fb47586e2",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "91fc726b-0451-48d9-a4a7-2bddc12a14da",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "3a0a9254-6b97-4fa2-8e2c-566edca50aa6",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "82555979-429e-4827-837b-9f6dcc9e786f",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "e2a430d6-94b4-4564-af2a-4e36311588e7",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "99e8f4fd-a079-47c1-bd29-7630dd7f3668",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "246f240d-81f2-4072-9884-fe1bb7362bc0",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "9d3f86ed-d455-4c5e-8840-d82b2729001c",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "36145940-b087-4062-8b71-a7ff33d5782c",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "4a5bf56a-d58b-4e4b-aec0-1272ca097ad8",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "72e3c256-5e11-4440-91e8-57104cfaac5e",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "c05d0a6d-8b23-4f3a-8f3a-b1e26ae7bb2d",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "a3f559c4-26a3-4d0d-909a-af7d52094dd7",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "34efea0d-52c1-4bb7-aaaa-52fd4b691f98",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "a13d803b-80cf-448e-84d4-a782cc9c6c48",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "bab9cf07-3b55-4edd-9b2e-f10ebc1c6545",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "bdbcab5c-25bc-4107-aef6-8b6097d9d555",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5"
  },
  "keycloakVersion": "15.1.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
